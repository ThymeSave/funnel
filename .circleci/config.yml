version: '2.1'

.go_executor: &go_executor
  executor:
    name: go/default
    tag: '1.16'

orbs:
  github-release: timo-reymann/github-release@1.1.0
  go: circleci/go@1.7.0
  pack: buildpacks/pack@0.2.4

executors:
  node:
    docker:
      - image: cimg/node:lts

commands:
  go_install_dependencies:
    steps:
      - go/load-cache
      - go/mod-download
      - go/save-cache
  set_version_env_var:
    steps:
      - run:
          name: Evaluate and set version env variable
          command: |
            if [[ -z "${CIRCLE_TAG}" ]]
            then
              export VERSION=snapshot
              export IS_SNAPSHOT_VERSION=1
            else
             export VERSION="${CIRCLE_TAG}"
             export IS_SNAPSHOT_VERSION=0
            fi

            echo "export VERSION='${VERSION}'" >> $BASH_ENV
            echo "export IS_SNAPSHOT_VERSION='${IS_SNAPSHOT_VERSION}'" >> $BASH_ENV

jobs:
  test:
    <<: *go_executor
    steps:
      - checkout
      - go_install_dependencies
      - run:
          name: Run tests
          command: make test
      - run:
          name: Push test coverage to codecov.io
          command: |
            go test -race -coverprofile=coverage.txt -covermode=atomic  -v ./...
            bash <(curl -s https://codecov.io/bash)
  build_gh_pages:
    executor: node
    steps:
      - checkout
      - run:
          name: Build html documentation
          command: |
            mkdir gh-pages
            npx redoc-cli@0.12.3 bundle -o gh-pages/index.html docs/openapi.yml
            echo "funnel.docs.thymesave.app" > gh-pages/CNAME
      - run:
          name: Publish github pages
          command: |
            git config user.email "thymesave-bot@thymesave.github.io"
            git config user.name "thymesave-bot"
            npx gh-pages@2.0.1 --dist gh-pages/ --message "docs: Update github pages [ci skip]"

  build:
    <<: *go_executor
    steps:
      - checkout
      - go_install_dependencies
      - set_version_env_var
      - run:
          name: Build binary
          command: make build
      - persist_to_workspace:
          name: Persist distribution folder
          root: .
          paths:
            - dist/
  build-image:
    <<: *go_executor
    steps:
      - checkout
      - pack/install-pack
      - set_version_env_var
      - setup_remote_docker
      - run:
          name: Build image
          command: make build-image
      - run:
          name: Login to GitHub packages
          command: |
            echo ${GITHUB_PACKAGES_TOKEN} | docker login --password-stdin -u ${GITHUB_PACKAGES_USER} ghcr.io
      - run:
          name: Publish image with docker cli
          command: make push-image

workflows:
  continious:
    jobs:
      - test
      - build:
          requires:
            - test
      - build-image:
          requires:
            - test
            - build
          filters:
            branches:
              only:
                - main
          context:
            - github-packages
      - build_gh_pages:
          filters:
            branches:
              only:
                - main
          requires:
            - build
            - test
      - github-release/create-release-with-files:
          file_pattern: 'dist/*'
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
